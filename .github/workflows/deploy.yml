name: Deploy to SmarterASP via FTP (Nuclear Option - Preserve Config)
on:
  push:
    branches: [ main, master ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout Code
      uses: actions/checkout@v4
    
    - name: Setup .NET 8
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'
    
    - name: Show Git Info
      run: |
        echo "üìã Deploying commit: $(git log -1 --oneline)"
        echo "üìÇ Changed files:"
        git diff-tree --no-commit-id --name-only -r HEAD | head -10
        
    - name: Clean Previous Build
      run: |
        echo "üßπ Cleaning previous builds..."
        dotnet clean Trippy.API/Trippy.Api.csproj || true
        rm -rf ./publish
        
    - name: Build and Publish
      run: |
        echo "üì¶ Building and publishing project..."
        dotnet publish Trippy.API/Trippy.Api.csproj \
          --configuration Release \
          --output ./publish \
          --no-cache \
          /p:UseAppHost=false \
          /p:DebugType=None \
          -v minimal
        
        echo ""
        echo "‚úÖ Build completed successfully!"
        echo "üìä Main DLL size: $(ls -lh ./publish/Trippy.Api.dll | awk '{print $5}')"
        echo "üì¶ Total files published: $(find ./publish -type f | wc -l)"
    
    - name: Verify Controllers in Build
      run: |
        echo "üîç Verifying controllers are compiled into DLL..."
        echo "=========================================="
        strings ./publish/Trippy.Api.dll | grep -i "Controller" | grep -v "ControllerBase" | grep -v "IController" | sort | uniq || echo "‚ö†Ô∏è No controller strings found"
        echo "=========================================="
    
    # STEP 1: Stop the application
    - name: "STEP 1/6: Stop Application"
      run: |
        echo "üõë Creating app_offline.htm to stop application..."
        cat > app_offline.htm << 'EOF'
    <!DOCTYPE html>
    <html>
    <head><title>Maintenance</title></head>
    <body style="font-family: Arial; text-align: center; padding: 50px;">
        <h1>üîÑ Application Update in Progress</h1>
        <p>The application is being updated. Please wait 30-60 seconds and refresh.</p>
        <p><small>Started: $(date -u)</small></p>
    </body>
    </html>
    EOF
        
        curl -T app_offline.htm \
          --user "${{ secrets.WEB_DEPLOY_USERNAME }}:${{ secrets.WEB_DEPLOY_PASSWORD }}" \
          ftp://win8231.site4now.net/trippyapi/app_offline.htm
        
        echo "‚úÖ Application stopped"
        echo "‚è≥ Waiting 15 seconds for IIS to release all file locks..."
        sleep 15
    
    # STEP 2: Nuclear option - delete DLLs only (preserve config files)
    - name: "STEP 2/6: Nuclear Clean - Delete DLLs Only (Preserve Configs)"
      run: |
        echo "üí£ NUCLEAR OPTION: Deleting ALL DLLs and runtime files..."
        echo "‚ö†Ô∏è  PRESERVING: appsettings.json and web.config"
        echo ""
        
        # Only delete DLLs and runtime files, NOT config files
        FILES_TO_DELETE=(
          "Trippy.Api.dll"
          "Trippy.Api.deps.json"
          "Trippy.Api.runtimeconfig.json"
          "Trippy.Api.pdb"
        )
        
        echo "üóëÔ∏è Deleting core DLL files:"
        for file in "${FILES_TO_DELETE[@]}"; do
          echo "  - Deleting $file..."
          curl --user "${{ secrets.WEB_DEPLOY_USERNAME }}:${{ secrets.WEB_DEPLOY_PASSWORD }}" \
            ftp://win8231.site4now.net/ \
            -Q "-DELE /trippyapi/$file" 2>&1 | grep -v "550" || true
        done
        
        echo ""
        echo "‚úÖ Old DLL files deleted (configs preserved)"
        echo "‚è≥ Waiting 10 seconds for file system to stabilize..."
        sleep 10
    
    # STEP 3: Deploy fresh files (excluding config files)
    - name: "STEP 3/6: Deploy Fresh Files via FTP"
      uses: SamKirkland/FTP-Deploy-Action@v4.3.4
      with:
        server: win8231.site4now.net
        username: ${{ secrets.WEB_DEPLOY_USERNAME }}
        password: ${{ secrets.WEB_DEPLOY_PASSWORD }}
        local-dir: ./publish/
        server-dir: /trippyapi/
        port: 21
        protocol: ftp
        timeout: 600000
        log-level: verbose
        dangerous-clean-slate: false
        exclude: |
          **/.git*
          **/.git*/**
          **/obj/**
          **/*.pdb
          **/ref/**
          **/appsettings.json
          **/appsettings.*.json
          **/web.config
    
    # STEP 4: Verify upload
    - name: "STEP 4/6: Verify Files Uploaded"
      run: |
        echo "üìä Checking uploaded files on server..."
        curl --user "${{ secrets.WEB_DEPLOY_USERNAME }}:${{ secrets.WEB_DEPLOY_PASSWORD }}" \
          ftp://win8231.site4now.net/trippyapi/ -l | grep -E "Trippy.Api.dll|web.config" || echo "‚ö†Ô∏è Files not visible yet"
        
        echo ""
        echo "‚úÖ Upload completed"
        sleep 5
    
    # STEP 5: Force IIS restart by touching web.config (don't replace it)
    - name: "STEP 5/6: Force IIS Restart (Touch web.config)"
      run: |
        echo "üîÑ Forcing IIS restart by touching web.config..."
        echo "‚ö†Ô∏è  Downloading existing web.config to preserve it..."
        
        # Download existing web.config
        curl --user "${{ secrets.WEB_DEPLOY_USERNAME }}:${{ secrets.WEB_DEPLOY_PASSWORD }}" \
          ftp://win8231.site4now.net/trippyapi/web.config -o web.config.existing 2>/dev/null
        
        if [ -f web.config.existing ]; then
          echo "‚úÖ Found existing web.config - adding timestamp comment..."
          # Add a comment with timestamp to trigger IIS reload
          echo "" >> web.config.existing
          echo "<!-- Deployed: $(date -u +"%Y-%m-%d %H:%M:%S UTC") -->" >> web.config.existing
          echo "<!-- Commit: $(git log -1 --oneline) -->" >> web.config.existing
          
          # Upload modified web.config
          curl -T web.config.existing \
            --user "${{ secrets.WEB_DEPLOY_USERNAME }}:${{ secrets.WEB_DEPLOY_PASSWORD }}" \
            ftp://win8231.site4now.net/trippyapi/web.config
          
          echo "‚úÖ web.config touched - IIS will detect change"
        else
          echo "‚ö†Ô∏è No existing web.config found - creating minimal one..."
          cat > web.config.new << 'EOF'
    <?xml version="1.0" encoding="utf-8"?>
    <configuration>
      <system.webServer>
        <handlers>
          <add name="aspNetCore" path="*" verb="*" modules="AspNetCoreModuleV2" resourceType="Unspecified" />
        </handlers>
        <aspNetCore processPath="dotnet" 
                    arguments=".\Trippy.Api.dll" 
                    stdoutLogEnabled="false" 
                    stdoutLogFile=".\logs\stdout" 
                    hostingModel="inprocess" />
      </system.webServer>
    </configuration>
    EOF
          
          curl -T web.config.new \
            --user "${{ secrets.WEB_DEPLOY_USERNAME }}:${{ secrets.WEB_DEPLOY_PASSWORD }}" \
            ftp://win8231.site4now.net/trippyapi/web.config
          
          echo "‚úÖ New web.config created"
        fi
        
        echo "‚è≥ Waiting 8 seconds..."
        sleep 8
    
    # STEP 6: Remove app_offline.htm to start the app
    - name: "STEP 6/6: Start Application"
      run: |
        echo "‚úÖ Removing app_offline.htm to start application with NEW code..."
        
        curl --user "${{ secrets.WEB_DEPLOY_USERNAME }}:${{ secrets.WEB_DEPLOY_PASSWORD }}" \
          ftp://win8231.site4now.net/ \
          -Q "-DELE /trippyapi/app_offline.htm" 2>&1 | grep -v "550" || true
        
        echo ""
        echo "üöÄ Application starting with fresh DLL..."
        echo "‚è≥ Waiting 20 seconds for application to fully start..."
        sleep 20
    
    # Final verification
    - name: Verify Deployment Success
      run: |
        echo "üß™ Testing API endpoint..."
        echo ""
        
        HTTP_CODE=$(curl -s -o /dev/null -w "%{http_code}" http://sreenathganga-001-site13.jtempurl.com/ 2>/dev/null || echo "000")
        
        echo "üìä Response Code: $HTTP_CODE"
        
        if [ "$HTTP_CODE" = "200" ] || [ "$HTTP_CODE" = "404" ]; then
          echo "‚úÖ API is responding!"
        elif [ "$HTTP_CODE" = "503" ]; then
          echo "‚ö†Ô∏è API still starting (503) - wait 30 more seconds and try again"
        else
          echo "‚ö†Ô∏è Unexpected response: $HTTP_CODE"
          echo "   This might be normal if the app is still starting"
        fi
        
        echo ""
        echo "=============================================="
        echo "‚úÖ DEPLOYMENT COMPLETE!"
        echo "=============================================="
        echo "üåê Your API: http://sreenathganga-001-site13.jtempurl.com/"
        echo "üìù Test your new endpoints now!"
        echo "‚è∞ If not working yet, wait 1-2 minutes for IIS cache to fully clear"
        echo ""
        echo "üîç Deployed commit: $(git log -1 --oneline)"
        echo "‚úÖ Config files preserved on server"
        echo "=============================================="
